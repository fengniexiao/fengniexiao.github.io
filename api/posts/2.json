{"title":"Github Page+Hexo 搭建博客使用主题教程","slug":"Github Page+Hexo搭建博客使用主题Mustom教程","date":"2020-05-13","updated":"2020-05-13","comments":true,"path":"api/posts/2.json","excerpt":"<ul><li>使用 Github Page+Hexo 搭建技术博客 </li><li> 应用主题 </li><li> 优化博客</li></ul>","cover":"http://ww1.sinaimg.cn/large/e92dbddbgy1gghi89w5htj20h60dfmxq.jpg","covers":["http://ww1.sinaimg.cn/large/e92dbddbgy1gghi89w5htj20h60dfmxq.jpg"],"content":"<ul><li>使用 Github Page+Hexo 搭建技术博客 </li><li> 应用主题 </li><li> 优化博客 </li></ul><a id=\"more\"></a><h1> 前言 </h1><p><strong>Github Page 是 Github 提供的一种免费的静态网页托管服务，可以用来托管博客、项目官网等静态网页。Hexo 博客框架 编译静态资源。准备好 GitHub。图床工具：微博图床</strong><br><strong> 下面开始了~</strong></p><h1>准备好环境 </h1><p><strong> 安装 node</strong><br><em><strong>Node.js 官方网站下载：(<a href=\"https://nodejs.org/zh-cn/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">https://nodejs.org/zh-cn/</a>)</strong></em><br>![8ZFOD~2<a href=\"http://ww1.sinaimg.cn/large/e92dbddbgy1gghi8mzr6kj20y90ox77j.jpg\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">%TXOVM@KSZ~5BMK.png</a><br><em><strong>双击打开安装，下一步下一步即可 </strong></em><br><img src=\"http://ww1.sinaimg.cn/large/e92dbddbgy1gghi89w5htj20h60dfmxq.jpg\" alt=\"1033899-20190901100914627-1885403639.png\"><br><em><strong> 安装完成后默认会将模块安装在 C:\\Users\\ 用户名 \\AppData\\Roaming 路径下的 npm 和 npm_cache 中，不方便管理且占用 C 盘空间, 可更改目录（其中，npm 随安装程序自动安装，作用就是对 Node.js 依赖的包进行管理）</strong></em><br><em><strong>配置自定义的全局模块安装目录，在 node.js 安装目录下新建两个文件夹 node_global 和 node_cache，然后在 cmd 命令下执行如下两个命令：</strong></em></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config set prefix &quot;D:\\Program Files\\nodejs\\node_global&quot;</span><br><span class=\"line\">npm config set cache &quot;D:\\Program Files\\nodejs\\node_cache&quot;</span><br></pre></td></tr></table></figure><p><em><strong>执行完后，配置环境变量，如下：</strong></em><br>环境变量” -&gt; “系统变量”：新建一个变量名为 “NODE_PATH”， 值为“D:\\Program Files\\nodejs\\node_global\\node_modules”<br>环境变量” -&gt; “用户变量”：编辑用户变量里的 Path，将相应 npm 的路径（“C:\\Users\\ 用户名 \\AppData\\Roaming\\npm”）改为：“D:\\Program Files\\nodejs\\node_global”<br><em><strong>配置完成，测试：</strong></em><br>在 cmd 命令下执行 npm install webpack -g 安装 webpack<br><img src=\"http://ww1.sinaimg.cn/large/e92dbddbgy1gghi7vh6joj20fl05kt97.jpg\" alt=\"1033899-20190901104806487-238482989.png\"><br><strong>建好自己的 GitHub Page 仓库 </strong><br><em><strong> 新建好一个仓库 </strong></em><a href=\"http://xn--siq6ny7kba185k3jf1t2bvu1bdeyb.github.io\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\"> 仓库名默认为用户名.github.io</a><br>![X6Z]X3XPAQQ8S80MDCV$D5X.png](<a href=\"http://ww1.sinaimg.cn/large/e92dbddbgy1gghig57xbkj20rw0n0myx.jpg\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">http://ww1.sinaimg.cn/large/e92dbddbgy1gghig57xbkj20rw0n0myx.jpg</a>)<br><em><strong>设置仓库 </strong></em><br>![B87H)]5LOZLNMB63T%GD3}J.png](<a href=\"http://ww1.sinaimg.cn/large/e92dbddbgy1gghify3l34j210l0lgju5.jpg\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">http://ww1.sinaimg.cn/large/e92dbddbgy1gghify3l34j210l0lgju5.jpg</a>)<br> 默认访问地址为 https:// 用户名.github.io，可设置 Custom domain 改为指定域名，需要去域名管理中解析域名到仓库对应 ip 地址 (仓库 ip 地址可 cmd 中 ping 默认访问地址得到)<br><strong>GitHub 仓库关联本地</strong><br> 要使用 git 工具首先要配置一下 SSH key，为部署本地博客到 Github 做准备, 命令行输入 cd ~/.ssh 无报错可直接使用 cat ~/.ssh/id_rsa.pub 命令查看本机上的 SSH key。<br>如果之前没有创建，则执行以下命令全局配置一下本地账户 </p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot; 用户名 &quot;</span><br><span class=\"line\">git config --global user.email &quot; 邮箱地址 &quot;</span><br><span class=\"line\">ssh-keygen -t rsa -C &#39; 邮箱 &#39;</span><br></pre></td></tr></table></figure><p> 按照提示完成三次回车，即可生成 ssh key。<br>首次使用还需要确认并添加主机到本机 SSH 可信列表。若返回 Hi xxx! You’ve successfully authenticated, but GitHub does not provide shell access. 内容，则证明添加成功。<br>登录 Github 上添加刚刚生成的 SSH key<br><img src=\"http://ww1.sinaimg.cn/large/e92dbddbgy1gghisxq9xpj20m809mabr.jpg\" alt=\"2606323609-5c47cdffae293_articlex.jpg\"></p><h1>安装 Hexo，并创建一个 blog</h1><p>** 使用 npm 开始安装 Hexo **</p><figure class=\"highlight plain\"><figcaption><span>install -g hexo-cli```</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">** 安装 Hexo 完成后，再执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。**</span><br></pre></td></tr></table></figure><p>hexo init Blog<br>cd Blog<br>npm install</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">** 如果上面的命令都没报错的话，就恭喜了，运行 hexo s 命令，其中 s 是 server 的缩写，在浏览器中输入 http:&#x2F;&#x2F;localhost:4000 回车就可以预览效果了。**</span><br></pre></td></tr></table></figure><p>hexo clean #清除 <br>hexo g #生成静态文件<br>hexo s #本地预览<br>hexo d #部署</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># 使用 hexo 中自己选择好的主题</span><br><span class=\"line\"></span><br><span class=\"line\">** 可以到[官网主题页](https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;) 或者网上找你喜欢的，很多都不错，我使用的是 Mustom 主题。**</span><br><span class=\"line\">![ILS&#123;BXU_RW4L41V0OY1LN&#125;5.png](http:&#x2F;&#x2F;ww1.sinaimg.cn&#x2F;large&#x2F;e92dbddbgy1gghj5zw69xj21ha0pk1kx.jpg)</span><br><span class=\"line\">** 将主题下载到目录 themes 下，修改根目录下的_config.yml 文件的 Extensions**</span><br></pre></td></tr></table></figure><h1>Extensions</h1><h2 id=\"Plugins-https-hexo-io-plugins\">Plugins: <a href=\"https://hexo.io/plugins/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">https://hexo.io/plugins/</a></h2><h2 id=\"Themes-https-hexo-io-themes\">Themes: <a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">https://hexo.io/themes/</a></h2><p>theme: mustom</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># 静态图床 </span><br><span class=\"line\"></span><br><span class=\"line\">** 在文章中会不时插入图片，这时需要个图床来管理生成，去 chrome 网上应用商店下载一个叫微博图床的 chrome 插件，下图是插件的界面，操作简单方便，具体使用看说明就可以啦，比较简单 **</span><br><span class=\"line\">![O8Q99BO0DZ%3_77[~IRL&#125;4A.png](http:&#x2F;&#x2F;ww1.sinaimg.cn&#x2F;large&#x2F;e92dbddbgy1gghjaq80v4j20ws0mojvq.jpg)</span><br><span class=\"line\"></span><br><span class=\"line\"># 优化博客</span><br><span class=\"line\"></span><br><span class=\"line\">** 添加 valine 评论系统 **</span><br><span class=\"line\"> 打开 主题_config.yml 文件，搜索 valine，开启 valine，设置 enable 为 true</span><br><span class=\"line\">![D$&#96;I2SOSI@PLHFH59OJXGEC.png](http:&#x2F;&#x2F;ww1.sinaimg.cn&#x2F;large&#x2F;e92dbddbgy1gghjghkmctj20i804adhb.jpg)</span><br><span class=\"line\">然后到 leanCloud 登录或者注册 一个账号，注册后登录创建一个应用，然后进入应该到设置里面找到 AppId 和 AppKey 复制粘贴到主题配置文件里面对应的地方，就是上图中的 appid 和 appkey 这两个地方。</span><br><span class=\"line\">** 添加字数统计和阅读时长 **</span><br><span class=\"line\">安装一个插件 </span><br><span class=\"line\">&#96;&#96;&#96;npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure><p> 接着博客根目录下的配置文件里添加以下配置 </p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 文章字数统计</span><br><span class=\"line\">symbols_count_time:</span><br><span class=\"line\">  symbols: true</span><br><span class=\"line\">  time: true</span><br><span class=\"line\">  total_symbols: true</span><br><span class=\"line\">  total_time: true</span><br></pre></td></tr></table></figure><p> 最后到主题的配置文件下开启 symbols_count_time 字段 <br><strong> 还可添加其他功能，如有需要自行查看官方文档或百度 </strong></p><h1> 部署到 GitHub</h1><p><strong>在 cmd 中执行 hexo clean，hexo g,hexo d 部署到 github 上 </strong></p><h1> 优化访问 </h1><p><strong> 代码同时部署到 coding</strong><br>流程类型 github。<br>在根目录下的 <em>config.yml 配置文件中的部署配置里，把 coding 的 git 地址添加进去就行了 <br><img src=\"http://ww1.sinaimg.cn/large/e92dbddbgy1gghjqhjadbj20o60650v8.jpg\" alt=\"%4IG.png\"><br> 执行 hexo clean, hexo g, hexo d 会部署到 GitHub 和 coding 上 <br><strong> 百度站长平台添加网站管理 </strong><br> 注册百度站长工具，并添加网站 <br>![}]3}OO</em><a href=\"http://ww1.sinaimg.cn/large/e92dbddbgy1gghju6qc7kj21c10eeae4.jpg\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">@PELI$IC7G(7GKN.png</a><br> 可以直接在主题的配置文件下搜索 baidu_site_verification 后面填上第三步中 meta 标签中 content 的值就可以 <br> 最后点完成验证就可以通过了。<br><strong>添加蜘蛛协议 robots.txt</strong><br>增加 robots.txt 文件，就是蜘蛛协议，新建 robots.txt 文件添加以下内容，把 robots.txt 放在 /source 文件下 </p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># hexo robots.txt</span><br><span class=\"line\">User-agent: *</span><br><span class=\"line\">Allow: &#x2F;</span><br><span class=\"line\">Allow: &#x2F;archives&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">Disallow: &#x2F;vendors&#x2F;</span><br><span class=\"line\">Disallow: &#x2F;js&#x2F;</span><br><span class=\"line\">Disallow: &#x2F;css&#x2F;</span><br><span class=\"line\">Disallow: &#x2F;fonts&#x2F;</span><br><span class=\"line\">Disallow: &#x2F;vendors&#x2F;</span><br><span class=\"line\">Disallow: &#x2F;fancybox&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">Sitemap: 域名 &#x2F;sitemap.xml</span><br><span class=\"line\">Sitemap: 域名 &#x2F;baidusitemap.xml</span><br></pre></td></tr></table></figure><p> 完成后，重启 hexo，执行 hexo g -d 重新生成文件并提交后，在 public 目录下会生成对应的 xml 文件。<br><strong>主动推送 </strong><br> 安装第三方插件 hexo-baidu-url-submit 进行主动推送 </p><figure class=\"highlight plain\"><figcaption><span>install hexo-baidu-url-submit --save```</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 添加配置到根目录下的配置文件里 </span><br></pre></td></tr></table></figure><h1> 百度链接提交 - 主动推送配置 </h1><p>baidu_url_submit:<br>count: 3 ## 提交最新的一个链接<br>host: pojian.xyz ## 在百度站长平台中注册的域名<br>token: 3GIEYsuq5ZTkvDBm ## 请注意这是您的秘钥，所以请不要把博客源代码发布在公众仓库里!<br>path: baidu_urls.txt ## 文本文档的地址， 新链接会保存在此文本文档里</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 添加新的部署配置，注意这里跟之前有点不一样，要在 type 前添加一个破折号 -</span><br></pre></td></tr></table></figure><p>deploy:</p><ul><li>type: git<br>repo:<br>github:<br>coding:</li><li>type: baidu_url_submitter</li></ul><pre><code>*** 实现原理 ***\n\t新链接的产生， hexo generate 会产生一个文本文件，里面包含最新的链接\n\t新链接的提交， hexo deploy 会从上述文件中读取链接，提交至百度搜索引擎\n** 还可进行其他优化，如有需要自行查看官方文档或百度 **\n\n\n\n\n\n\n\n\n\n\n</code></pre>","url":"/posts/2/","min2read":7,"word4post":"1.8k","prev_post":{"title":"使用 Mustom 主题经过和报错","url":"/posts/1/"},"next_post":{"title":"Hexo 主题 Mustom 使用指南（对应主题 1.0 版）","url":"/posts/55821/"},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"\" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\"> 前言 </span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"\" href = \"#\"><span class=\"toc-number\">2.</span> <span class=\"toc-text\">准备好环境 </span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"\" href = \"#\"><span class=\"toc-number\">3.</span> <span class=\"toc-text\">安装 Hexo，并创建一个 blog</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"\" href = \"#\"><span class=\"toc-number\">4.</span> <span class=\"toc-text\">Extensions</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"Plugins-https-hexo-io-plugins\" href = \"#\"><span class=\"toc-number\">4.1.</span> <span class=\"toc-text\">Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"Themes-https-hexo-io-themes\" href = \"#\"><span class=\"toc-number\">4.2.</span> <span class=\"toc-text\">Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"\" href = \"#\"><span class=\"toc-number\">5.</span> <span class=\"toc-text\"> 部署到 GitHub</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"\" href = \"#\"><span class=\"toc-number\">6.</span> <span class=\"toc-text\"> 优化访问 </span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"\" href = \"#\"><span class=\"toc-number\">7.</span> <span class=\"toc-text\"> 百度链接提交 - 主动推送配置 </span></a></li></ol>","categories":[{"name":"Hexo","path":"api/categories/Hexo.json","url":"/categories/Hexo/"}],"tags":[{"name":"Github Page","path":"api/tags/Github Page.json","url":"/tags/Github-Page/"}]}