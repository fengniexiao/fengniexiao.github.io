{"title":"python 调库简单实现可视化","slug":"python调库简单可视化","date":"2020-06-29","updated":"2020-06-29","comments":true,"path":"api/posts/00009.json","excerpt":"<ul><li>python 可视化库 </li><li> 简单实现可视化</li></ul>","cover":null,"covers":null,"content":"<ul><li>python 可视化库 </li><li> 简单实现可视化 </li></ul><a id=\"more\"></a><p>#sweetviz - 1 行代码实现 Python 数据分析<br>sweetviz: 这是一个基于 Python 编写的数据分析软件，只要掌握 3 种函数用法，一行 Python 代码就能实现数据集可视化、分析与比较。<br><strong>sweetviz 支持 Python 3.6+ 和 Pandas0.25.3+ 环境，配置好环境</strong></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install sweeetziv</span><br></pre></td></tr></table></figure><p><strong>sweetviz 使用的原理是，使用一行代码，生成一个数据报告的对象（其中，my_dataframe 是 pandas 中的 DataFrame，一种表格型数据结构）：</strong></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">my_dataframe &#x3D; pd.read_csv(&#39;..&#x2F;ImpartData&#x2F;iris.csv&#39;)</span><br><span class=\"line\">my_report &#x3D; sv.analyze(my_dataframe)</span><br></pre></td></tr></table></figure><p> 在这里，analyze 函数可以被替换为 compare 或 compare_intra 函数，使用方法在上面已经给出，全看你需要什么类型的数据报告了。<br>最后，用 show 一键输出。（结果会以 SWEETVIZ_REPORT.html 网页形式展示）<br>#3 种函数用法 <br><strong>1、analyze() 丨数据分析 </strong></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">analyze(source: Union[pd.DataFrame, Tuple[pd.DataFrame, str]],</span><br><span class=\"line\">            target_feat: str &#x3D; None,</span><br><span class=\"line\">            feat_cfg: FeatureConfig &#x3D; None,</span><br><span class=\"line\">            pairwise_analysis: str &#x3D; &#39;auto&#39;):</span><br></pre></td></tr></table></figure><p>source：以 pandas 中的 DataFrame 数据结构、或是 DataFrame 中的某一类字符串作为分析对象。<br>target_feat：需要被标记为目标对象的字符串。<br>feat_cfg：需要被跳过、或是需要被强制转换为某种数据类型的特征。<br>pairwise_analysis：相关性和其他类型的数据关联可能需要花费较长时间。如果超过了某个阈值，就需要设置这个参数为 on 或者 off，以判断是否需要分析数据相关性。<br><strong>compare() 丨两个数据集比较 </strong></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">my_report &#x3D; sv.compare([my_dataframe, &quot;Training Data&quot;], [test_df, &quot;Test Data&quot;], &quot;Survived&quot;, feature_config)</span><br></pre></td></tr></table></figure><p> 如果想要对两个数据集进行对比分析，就使用这个比较函数。<br>例子中的 my_dataframe 和 test_df 是两个数据集，分别被命名为训练数据和测试数据。<br>除了这个被插入的数据集，剩余的参数与 analyze 中的一致。<br><strong>compare_intra()丨数据集栏目比较 </strong></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">my_report &#x3D; sv.compare_intra(my_dataframe, my_dataframe[&quot;Sex&quot;] &#x3D;&#x3D; &quot;male&quot;, [&quot;Male&quot;, &quot;Female&quot;], feature_config)</span><br></pre></td></tr></table></figure><p> 想要对数据集中某个栏目下的参数进行分析，就采用这个函数进行。<br>例如，如果需要比较“性别”栏目下的“男性”和“女性”，就可以采用这个函数。</p><p><strong><em>本文转载于</em>(<a href=\"https://blog.csdn.net/qq_19446965/article/details/107196807\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">https://blog.csdn.net/qq_19446965/article/details/107196807</a>)</strong></p>","url":"/posts/00009/","min2read":2,"word4post":575,"prev_post":{"title":"python 调库简单实现建模","url":"/posts/8/"},"next_post":{"title":"链家二手房数据建模并预测","url":"/posts/00008/"},"toc":"","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"}],"tags":[{"name":"数据可视化","path":"api/tags/数据可视化.json","url":"/tags/数据可视化/"}]}